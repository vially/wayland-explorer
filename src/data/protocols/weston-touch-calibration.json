{"type":"protocol","name":"weston_touch_calibration","copyright":{"type":"copyright","text":"Copyright 2017-2018 Collabora, Ltd.\n    Copyright 2017-2018 General Electric Company\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the \"Software\"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice (including the next\n    paragraph) shall be included in all copies or substantial portions of the\n    Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE."},"interfaces":[{"type":"interface","name":"weston_touch_calibration","version":"1","description":{"type":"description","text":"This is the global interface for calibrating a touchscreen input\n      coordinate transformation. It is recommended to make this interface\n      privileged.\n\n      This interface can be used by a client to show a calibration pattern and\n      receive uncalibrated touch coordinates, facilitating the computation of\n      a calibration transformation that will align actual touch positions\n      on screen with their expected coordinates.\n\n      Immediately after being bound by a client, the compositor sends the\n      touch_device events.\n\n      The client chooses a touch device from the touch_device events, creates a\n      wl_surface and then a weston_touch_calibrator for the wl_surface and the\n      chosen touch device. The client waits for the compositor to send a\n      configure event before it starts drawing the first calibration pattern.\n      After receiving the configure event, the client will iterate drawing a\n      pattern, getting touch input via weston_touch_calibrator, and converting\n      pixel coordinates to expected touch coordinates with\n      weston_touch_calibrator.convert until it has enough correspondences to\n      compute the calibration transformation or the compositor cancels the\n      calibration.\n\n      Once the client has successfully computed a new calibration, it can use\n      weston_touch_calibration.save request to load the new calibration into\n      the compositor. The compositor may take this new calibration into use and\n      may write it into persistent storage.","summary":"weston touchscreen calibration interface"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"Destroy the binding to the global interface, does not affect any\n\tobjects already created through this interface.","summary":"unbind"},"args":[]},{"type":"request","name":"create_calibrator","description":{"type":"description","text":"This gives the calibrator role to the surface and ties it with the\n\tgiven touch input device.\n\n\tIf the surface already has a role, then invalid_surface error is raised.\n\n\tIf the device string is not one advertised with touch_device event's\n\tdevice argument, then invalid_device error is raised.\n\n\tIf a weston_touch_calibrator protocol object exists in the compositor\n\talready, then already_exists error is raised. This limitation is\n\tcompositor-wide and not specific to any particular client.","summary":"give the calibrator role to a surface"},"args":[{"type":"arg","name":"surface","argType":"object","summary":"the surface to give the role to","interface":"wl_surface"},{"type":"arg","name":"device","argType":"string","summary":"the touch device to calibrate"},{"type":"arg","name":"cal","argType":"new_id","summary":"a new calibrator object","interface":"weston_touch_calibrator"}]},{"type":"request","name":"save","description":{"type":"description","text":"This request asks the compositor to save the calibration data for the\n\tgiven touch input device. The compositor may ignore this request.\n\n\tIf the device string is not one advertised with touch_device event's\n\tdevice argument, then invalid_device error is raised.\n\n\tThe array must contain exactly six 'float' (the 32-bit floating\n\tpoint format used by the C language on the system) numbers. For a 3x3\n\tcalibration matrix in the form\n\t@code\n\t\t( a b c )\n\t\t( d e f )\n\t\t( 0 0 1 )\n\t@endcode\n\tthe array must contain the values { a, b, c, d, e, f }. For the\n\tdefinition of the coordinate spaces, see\n\tlibinput_device_config_calibration_set_matrix().","summary":"save calibration for a touch device"},"args":[{"type":"arg","name":"device","argType":"string","summary":"the target touch device"},{"type":"arg","name":"matrix","argType":"array","summary":"the new calibration matrix"}]}],"events":[{"type":"event","name":"touch_device","description":{"type":"description","text":"When a client binds to weston_touch_calibration, one touch_device event\n\tis sent for each touchscreen that is available to be calibrated. This\n\tis the only time the event is sent. Touch devices added in the\n\tcompositor will not generate events for existing\n\tweston_touch_calibration objects.\n\n\tAn event carries the touch device identification and the associated\n\toutput or head (display connector) name.\n\n\tOn platforms using udev, the device identification is the udev sys\n\tpath. It is an absolute path and starts with the sys mount point.","summary":"advertise a touchscreen input device"},"args":[{"type":"arg","name":"device","argType":"string","summary":"the touch device identification"},{"type":"arg","name":"head","argType":"string","summary":"name of the head or display connector"}]}],"enums":[{"type":"enum","name":"error","bitfield":false,"description":{"type":"description","summary":"global interface errors"},"entries":[{"type":"entry","name":"invalid_surface","value":"0","summary":"the given wl_surface already has a role"},{"type":"entry","name":"invalid_device","value":"1","summary":"the given device is not valid"},{"type":"entry","name":"already_exists","value":"2","summary":"a calibrator has already been created"}]}]},{"type":"interface","name":"weston_touch_calibrator","version":"1","description":{"type":"description","text":"On creation, this object is tied to a specific touch device. The\n      compositor sends a configure event which the client must obey with the\n      associated wl_surface.\n\n      Once the client has committed content to the surface, the compositor can\n      grab the touch input device, prevent it from emitting normal touch\n      events, show the surface on the correct output, and relay input events\n      from the touch device via this protocol object.\n\n      Touch events from other touch devices than the one tied to this object\n      must generate wrong_touch events on at least touch-down and must not\n      generate normal or calibration touch events.\n\n      At any time, the compositor can choose to cancel the calibration\n      procedure by sending the cancel_calibration event. This should also be\n      used if the touch device disappears or anything else prevents the\n      calibration from continuing on the compositor side.\n\n      If the wl_surface is destroyed, the compositor must cancel the\n      calibration.\n\n      The touch event coordinates and conversion results are delivered in\n      calibration units. The calibration units cover the device coordinate\n      range exactly. Calibration units are in the closed interval [0.0, 1.0]\n      mapped into 32-bit unsigned integers. An integer can be converted into a\n      real value by dividing by 2^32-1. A calibration matrix must be computed\n      from the [0.0, 1.0] real values, but the matrix elements do not need to\n      fall into that range.","summary":"calibrator surface for a specific touch device"},"requests":[{"type":"request","name":"destroy","requestType":"destructor","description":{"type":"description","text":"This unmaps the surface if it was mapped. The input device grab\n\tis dropped, if it was present. The surface loses its role as a\n\tcalibrator.","summary":"destroy the calibrator"},"args":[]},{"type":"request","name":"convert","description":{"type":"description","text":"This request asks the compositor to convert the surface-local\n\tcoordinates into the expected touch input coordinates appropriate for\n\tthe associated touch device. The intention is that a client uses this\n\trequest to convert marker positions that the user is supposed to touch\n\tduring calibration.\n\n\tIf the compositor has cancelled the calibration, the conversion result\n\tshall be zeroes and no errors will be raised.\n\n\tThe coordinates given as arguments to this request are relative to\n\tthe associated wl_surface.\n\n\tIf a client asks for conversion before it has committed valid\n\tcontent to the wl_surface, the not_mapped error is raised.\n\n\tIf the coordinates x, y are outside of the wl_surface content, the\n\tbad_coordinates error is raised.","summary":"convert from surface to raw coordinates"},"args":[{"type":"arg","name":"x","argType":"int","summary":"surface-local X coordinate"},{"type":"arg","name":"y","argType":"int","summary":"surface-local Y coordinate"},{"type":"arg","name":"reply","argType":"new_id","summary":"object delivering the result","interface":"weston_touch_coordinate"}]}],"events":[{"type":"event","name":"configure","description":{"type":"description","text":"This event tells the client what size to make the surface. The client\n\tmust obey the size exactly on the next commit with a wl_buffer.\n\n\tThis event shall be sent once as a response to creating a\n\tweston_touch_calibrator object.","summary":"surface size"},"args":[{"type":"arg","name":"width","argType":"int","summary":"surface width"},{"type":"arg","name":"height","argType":"int","summary":"surface height"}]},{"type":"event","name":"cancel_calibration","description":{"type":"description","text":"This is sent when the compositor wants to cancel the calibration and\n\tdrop the touch device grab. The compositor unmaps the surface, if it\n\twas mapped.\n\n\tThe weston_touch_calibrator object will not send any more events. The\n\tclient should destroy it.","summary":"cancel the calibration procedure"},"args":[]},{"type":"event","name":"invalid_touch","description":{"type":"description","text":"For whatever reason, a touch event resulting from a user action cannot\n\tbe used for calibration. The client should show feedback to the user\n\tthat the touch was rejected.\n\n\tPossible causes for this event include the user touching a wrong\n\ttouchscreen when there are multiple ones present. This is particularly\n\tuseful when the touchscreens are cloned and there is no other way to\n\tidentify which screen the user should be touching.\n\n\tAnother cause could be a touch device that sends coordinates beyond its\n\tdeclared range. If motion takes a touch point outside the range, the\n\tcompositor should also send 'cancel' event to undo the touch-down.","summary":"a user touch that cannot be used for calibration"},"args":[]},{"type":"event","name":"down","description":{"type":"description","text":"A new touch point has appeared on the surface. This touch point is\n\tassigned a unique ID. Future events from this touch point reference\n\tthis ID. The ID ceases to be valid after a touch up event and may be\n\treused in the future.\n\n\tFor the coordinate units, see weston_touch_calibrator.","summary":"touch down event and beginning of a touch sequence"},"args":[{"type":"arg","name":"time","argType":"uint","summary":"timestamp with millisecond granularity"},{"type":"arg","name":"id","argType":"int","summary":"the unique ID of this touch point"},{"type":"arg","name":"x","argType":"uint","summary":"x coordinate in calibration units"},{"type":"arg","name":"y","argType":"uint","summary":"y coordinate in calibration units"}]},{"type":"event","name":"up","description":{"type":"description","text":"The touch point has disappeared. No further events will be sent for\n\tthis touch point and the touch point's ID is released and may be\n\treused in a future touch down event.","summary":"end of a touch event sequence"},"args":[{"type":"arg","name":"time","argType":"uint","summary":"timestamp with millisecond granularity"},{"type":"arg","name":"id","argType":"int","summary":"the unique ID of this touch point"}]},{"type":"event","name":"motion","description":{"type":"description","text":"A touch point has changed coordinates.\n\n\tFor the coordinate units, see weston_touch_calibrator.","summary":"update of touch point coordinates"},"args":[{"type":"arg","name":"time","argType":"uint","summary":"timestamp with millisecond granularity"},{"type":"arg","name":"id","argType":"int","summary":"the unique ID of this touch point"},{"type":"arg","name":"x","argType":"uint","summary":"x coordinate in calibration units"},{"type":"arg","name":"y","argType":"uint","summary":"y coordinate in calibration units"}]},{"type":"event","name":"frame","description":{"type":"description","text":"Indicates the end of a set of events that logically belong together.\n\tA client is expected to accumulate the data in all events within the\n\tframe before proceeding.\n\n\tA wl_touch.frame terminates at least one event but otherwise no\n\tguarantee is provided about the set of events within a frame. A client\n\tmust assume that any state not updated in a frame is unchanged from the\n\tpreviously known state.","summary":"end of touch frame event"},"args":[]},{"type":"event","name":"cancel","description":{"type":"description","text":"Sent if the compositor decides the touch stream is a global\n\tgesture. No further events are sent to the clients from that\n\tparticular gesture. Touch cancellation applies to all touch points\n\tcurrently active on this client's surface. The client is\n\tresponsible for finalizing the touch points, future touch points on\n\tthis surface may reuse the touch point ID.","summary":"touch session cancelled"},"args":[]}],"enums":[{"type":"enum","name":"error","bitfield":false,"description":{"type":"description","summary":"calibrator object errors"},"entries":[{"type":"entry","name":"bad_size","value":"0","summary":"surface size does not match"},{"type":"entry","name":"not_mapped","value":"1","summary":"requested operation is not possible without mapping the surface"},{"type":"entry","name":"bad_coordinates","value":"2","summary":"surface-local coordinates are out of bounds"}]}]},{"type":"interface","name":"weston_touch_coordinate","version":"1","description":{"type":"description","summary":"coordinate conversion reply"},"requests":[],"events":[{"type":"event","name":"result","description":{"type":"description","text":"This event returns the conversion result from surface coordinates to\n\tthe expected touch device coordinates.\n\n\tFor details, see weston_touch_calibrator.convert. For the coordinate\n\tunits, see weston_touch_calibrator.\n\n\tThis event destroys the weston_touch_coordinate object.","summary":"coordinates in raw touch space"},"args":[{"type":"arg","name":"x","argType":"uint","summary":"x coordinate in calibration units"},{"type":"arg","name":"y","argType":"uint","summary":"y coordinate in calibration units"}]}],"enums":[]}]}