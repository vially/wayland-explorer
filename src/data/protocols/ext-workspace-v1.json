{
  "type": "protocol",
  "name": "ext_workspace_v1",
  "copyright": {
    "type": "copyright",
    "text": "Copyright © 2019 Christopher Billington\nCopyright © 2020 Ilia Bozhinov\nCopyright © 2022 Victoria Brekenfeld\n\nPermission to use, copy, modify, distribute, and sell this\nsoftware and its documentation for any purpose is hereby granted\nwithout fee, provided that the above copyright notice appear in\nall copies and that both that copyright notice and this permission\nnotice appear in supporting documentation, and that the name of\nthe copyright holders not be used in advertising or publicity\npertaining to distribution of the software without specific,\nwritten prior permission.  The copyright holders make no\nrepresentations about the suitability of this software for any\npurpose.  It is provided \"as is\" without express or implied\nwarranty.\n\nTHE COPYRIGHT HOLDERS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS\nSOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS, IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY\nSPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\nAN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\nARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE."
  },
  "interfaces": [
    {
      "type": "interface",
      "name": "ext_workspace_manager_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "Workspaces, also called virtual desktops, are groups of surfaces. A\ncompositor with a concept of workspaces may only show some such groups of\nsurfaces (those of 'active' workspaces) at a time. 'Activating' a\nworkspace is a request for the compositor to display that workspace's\nsurfaces as normal, whereas the compositor may hide or otherwise\nde-emphasise surfaces that are associated only with 'inactive' workspaces.\nWorkspaces are grouped by which sets of outputs they correspond to, and\nmay contain surfaces only from those outputs. In this way, it is possible\nfor each output to have its own set of workspaces, or for all outputs (or\nany other arbitrary grouping) to share workspaces. Compositors may\noptionally conceptually arrange each group of workspaces in an\nN-dimensional grid.\n\nThe purpose of this protocol is to enable the creation of taskbars and\ndocks by providing them with a list of workspaces and their properties,\nand allowing them to activate and deactivate workspaces.\n\nAfter a client binds the ext_workspace_manager_v1, each workspace will be\nsent via the workspace event.",
        "summary": "list and control workspaces"
      },
      "requests": [
        {
          "type": "request",
          "name": "commit",
          "description": {
            "type": "description",
            "text": "The client must send this request after it has finished sending other\nrequests. The compositor must process a series of requests preceding a\ncommit request atomically.\n\nThis allows changes to the workspace properties to be seen as atomic,\neven if they happen via multiple events, and even if they involve\nmultiple ext_workspace_handle_v1 objects, for example, deactivating one\nworkspace and activating another.",
            "summary": "all requests about the workspaces have been sent"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "stop",
          "description": {
            "type": "description",
            "text": "Indicates the client no longer wishes to receive events for new\nworkspace groups. However the compositor may emit further workspace\nevents, until the finished event is emitted. The compositor is expected\nto send the finished event eventually once the stop request has been processed.\n\nThe client must not send any requests after this one, doing so will raise a wl_display\ninvalid_object error.",
            "summary": "stop sending events"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "workspace_group",
          "description": {
            "type": "description",
            "text": "This event is emitted whenever a new workspace group has been created.\n\nAll initial details of the workspace group (outputs) will be\nsent immediately after this event via the corresponding events in\next_workspace_group_handle_v1 and ext_workspace_handle_v1.",
            "summary": "a workspace group has been created"
          },
          "args": [
            {
              "type": "arg",
              "name": "workspace_group",
              "argType": "new_id",
              "interface": "ext_workspace_group_handle_v1"
            }
          ]
        },
        {
          "type": "event",
          "name": "workspace",
          "description": {
            "type": "description",
            "text": "This event is emitted whenever a new workspace has been created.\n\nAll initial details of the workspace (name, coordinates, state) will\nbe sent immediately after this event via the corresponding events in\next_workspace_handle_v1.\n\nWorkspaces start off unassigned to any workspace group.",
            "summary": "workspace has been created"
          },
          "args": [
            {
              "type": "arg",
              "name": "workspace",
              "argType": "new_id",
              "interface": "ext_workspace_handle_v1"
            }
          ]
        },
        {
          "type": "event",
          "name": "done",
          "description": {
            "type": "description",
            "text": "This event is sent after all changes in all workspaces and workspace groups have been\nsent.\n\nThis allows changes to one or more ext_workspace_group_handle_v1\nproperties and ext_workspace_handle_v1 properties\nto be seen as atomic, even if they happen via multiple events.\nIn particular, an output moving from one workspace group to\nanother sends an output_enter event and an output_leave event to the two\next_workspace_group_handle_v1 objects in question. The compositor sends\nthe done event only after updating the output information in both\nworkspace groups.",
            "summary": "all information about the workspaces and workspace groups has been sent"
          },
          "args": []
        },
        {
          "type": "event",
          "name": "finished",
          "eventType": "destructor",
          "description": {
            "type": "description",
            "text": "This event indicates that the compositor is done sending events to the\next_workspace_manager_v1. The server will destroy the object\nimmediately after sending this request.",
            "summary": "the compositor has finished with the workspace_manager"
          },
          "args": []
        }
      ],
      "enums": []
    },
    {
      "type": "interface",
      "name": "ext_workspace_group_handle_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "A ext_workspace_group_handle_v1 object represents a workspace group\nthat is assigned a set of outputs and contains a number of workspaces.\n\nThe set of outputs assigned to the workspace group is conveyed to the client via\noutput_enter and output_leave events, and its workspaces are conveyed with\nworkspace events.\n\nFor example, a compositor which has a set of workspaces for each output may\nadvertise a workspace group (and its workspaces) per output, whereas a compositor\nwhere a workspace spans all outputs may advertise a single workspace group for all\noutputs.",
        "summary": "a workspace group assigned to a set of outputs"
      },
      "requests": [
        {
          "type": "request",
          "name": "create_workspace",
          "description": {
            "type": "description",
            "text": "Request that the compositor create a new workspace with the given name\nand assign it to this group.\n\nThere is no guarantee that the compositor will create a new workspace,\nor that the created workspace will have the provided name.",
            "summary": "create a new workspace"
          },
          "args": [
            {
              "type": "arg",
              "name": "workspace",
              "argType": "string"
            }
          ]
        },
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroys the ext_workspace_group_handle_v1 object.\n\nThis request should be send either when the client does not want to\nuse the workspace group object any more or after the removed event to finalize\nthe destruction of the object.",
            "summary": "destroy the ext_workspace_group_handle_v1 object"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "capabilities",
          "description": {
            "type": "description",
            "text": "This event advertises the capabilities supported by the compositor. If\na capability isn't supported, clients should hide or disable the UI\nelements that expose this functionality. For instance, if the\ncompositor doesn't advertise support for creating workspaces, a button\ntriggering the create_workspace request should not be displayed.\n\nThe compositor will ignore requests it doesn't support. For instance,\na compositor which doesn't advertise support for creating workspaces will ignore\ncreate_workspace requests.\n\nCompositors must send this event once after creation of an\next_workspace_group_handle_v1. When the capabilities change, compositors\nmust send this event again.",
            "summary": "compositor capabilities"
          },
          "args": [
            {
              "type": "arg",
              "name": "capabilities",
              "argType": "uint",
              "summary": "capabilities",
              "enum": "group_capabilities"
            }
          ]
        },
        {
          "type": "event",
          "name": "output_enter",
          "description": {
            "type": "description",
            "text": "This event is emitted whenever an output is assigned to the workspace\ngroup or a new `wl_output` object is bound by the client, which was already\nassigned to this workspace_group.",
            "summary": "output assigned to workspace group"
          },
          "args": [
            {
              "type": "arg",
              "name": "output",
              "argType": "object",
              "interface": "wl_output",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "event",
          "name": "output_leave",
          "description": {
            "type": "description",
            "text": "This event is emitted whenever an output is removed from the workspace\ngroup.",
            "summary": "output removed from workspace group"
          },
          "args": [
            {
              "type": "arg",
              "name": "output",
              "argType": "object",
              "interface": "wl_output",
              "protocol": "wayland"
            }
          ]
        },
        {
          "type": "event",
          "name": "workspace_enter",
          "description": {
            "type": "description",
            "text": "This event is emitted whenever a workspace is assigned to this group.\nA workspace may only ever be assigned to a single group at a single point\nin time, but can be re-assigned during it's lifetime.",
            "summary": "workspace added to workspace group"
          },
          "args": [
            {
              "type": "arg",
              "name": "workspace",
              "argType": "object",
              "interface": "ext_workspace_handle_v1"
            }
          ]
        },
        {
          "type": "event",
          "name": "workspace_leave",
          "description": {
            "type": "description",
            "text": "This event is emitted whenever a workspace is removed from this group.",
            "summary": "workspace removed from workspace group"
          },
          "args": [
            {
              "type": "arg",
              "name": "workspace",
              "argType": "object",
              "interface": "ext_workspace_handle_v1"
            }
          ]
        },
        {
          "type": "event",
          "name": "removed",
          "description": {
            "type": "description",
            "text": "This event is send when the group associated with the ext_workspace_group_handle_v1\nhas been removed. After sending this request the compositor will immediately consider\nthe object inert. Any requests will be ignored except the destroy request.\nIt is guaranteed there won't be any more events referencing this\next_workspace_group_handle_v1.\n\nThe compositor must remove all workspaces belonging to a workspace group\nvia a workspace_leave event before removing the workspace group.",
            "summary": "this workspace group has been removed"
          },
          "args": []
        }
      ],
      "enums": [
        {
          "type": "enum",
          "name": "group_capabilities",
          "bitfield": true,
          "entries": [
            {
              "type": "entry",
              "name": "create_workspace",
              "value": "1",
              "summary": "create_workspace request is available"
            }
          ]
        }
      ]
    },
    {
      "type": "interface",
      "name": "ext_workspace_handle_v1",
      "version": "1",
      "description": {
        "type": "description",
        "text": "A ext_workspace_handle_v1 object represents a workspace that handles a\ngroup of surfaces.\n\nEach workspace has:\n- a name, conveyed to the client with the name event\n- potentially an id conveyed with the id event\n- a list of states, conveyed to the client with the state event\n- and optionally a set of coordinates, conveyed to the client with the\ncoordinates event\n\nThe client may request that the compositor activate or deactivate the workspace.\n\nEach workspace can belong to only a single workspace group.\nDepending on the compositor policy, there might be workspaces with\nthe same name in different workspace groups, but these workspaces are still\nseparate (e.g. one of them might be active while the other is not).",
        "summary": "a workspace handing a group of surfaces"
      },
      "requests": [
        {
          "type": "request",
          "name": "destroy",
          "requestType": "destructor",
          "description": {
            "type": "description",
            "text": "Destroys the ext_workspace_handle_v1 object.\n\nThis request should be made either when the client does not want to\nuse the workspace object any more or after the remove event to finalize\nthe destruction of the object.",
            "summary": "destroy the ext_workspace_handle_v1 object"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "activate",
          "description": {
            "type": "description",
            "text": "Request that this workspace be activated.\n\nThere is no guarantee the workspace will be actually activated, and\nbehaviour may be compositor-dependent. For example, activating a\nworkspace may or may not deactivate all other workspaces in the same\ngroup.",
            "summary": "activate the workspace"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "deactivate",
          "description": {
            "type": "description",
            "text": "Request that this workspace be deactivated.\n\nThere is no guarantee the workspace will be actually deactivated.",
            "summary": "deactivate the workspace"
          },
          "args": []
        },
        {
          "type": "request",
          "name": "assign",
          "description": {
            "type": "description",
            "text": "Requests that this workspace is assigned to the given workspace group.\n\nThere is no guarantee the workspace will be assigned.",
            "summary": "assign workspace to group"
          },
          "args": [
            {
              "type": "arg",
              "name": "workspace_group",
              "argType": "object",
              "interface": "ext_workspace_group_handle_v1"
            }
          ]
        },
        {
          "type": "request",
          "name": "remove",
          "description": {
            "type": "description",
            "text": "Request that this workspace be removed.\n\nThere is no guarantee the workspace will be actually removed.",
            "summary": "remove the workspace"
          },
          "args": []
        }
      ],
      "events": [
        {
          "type": "event",
          "name": "id",
          "description": {
            "type": "description",
            "text": "If this event is emitted, it will be send immediately after the\next_workspace_handle_v1 is created or when an id is assigned to\na workspace (at most once during it's lifetime).\n\nAn id will never change during the lifetime of the `ext_workspace_handle_v1`\nand is guaranteed to be unique during it's lifetime.\n\nIds are not human-readable and shouldn't be displayed, use `name` for that purpose.\n\nCompositors are expected to only send ids for workspaces likely stable across multiple\nsessions and can be used by clients to store preferences for workspaces. Workspaces without\nids should be considered temporary and any data associated with them should be deleted once\nthe respective object is lost.",
            "summary": "workspace id"
          },
          "args": [
            {
              "type": "arg",
              "name": "id",
              "argType": "string"
            }
          ]
        },
        {
          "type": "event",
          "name": "name",
          "description": {
            "type": "description",
            "text": "This event is emitted immediately after the ext_workspace_handle_v1 is\ncreated and whenever the name of the workspace changes.\n\nA name is meant to be human-readable and can be displayed to a user.\nUnlike the id it is neither stable nor unique.",
            "summary": "workspace name changed"
          },
          "args": [
            {
              "type": "arg",
              "name": "name",
              "argType": "string"
            }
          ]
        },
        {
          "type": "event",
          "name": "coordinates",
          "description": {
            "type": "description",
            "text": "This event is used to organize workspaces into an N-dimensional grid\nwithin a workspace group, and if supported, is emitted immediately after\nthe ext_workspace_handle_v1 is created and whenever the coordinates of\nthe workspace change. Compositors may not send this event if they do not\nconceptually arrange workspaces in this way. If compositors simply\nnumber workspaces, without any geometric interpretation, they may send\n1D coordinates, which clients should not interpret as implying any\ngeometry. Sending an empty array means that the compositor no longer\norders the workspace geometrically.\n\nCoordinates have an arbitrary number of dimensions N with an uint32\nposition along each dimension. By convention if N > 1, the first\ndimension is X, the second Y, the third Z, and so on. The compositor may\nchose to utilize these events for a more novel workspace layout\nconvention, however. No guarantee is made about the grid being filled or\nbounded; there may be a workspace at coordinate 1 and another at\ncoordinate 1000 and none in between. Within a workspace group, however,\nworkspaces must have unique coordinates of equal dimensionality.",
            "summary": "workspace coordinates changed"
          },
          "args": [
            {
              "type": "arg",
              "name": "coordinates",
              "argType": "array"
            }
          ]
        },
        {
          "type": "event",
          "name": "state",
          "description": {
            "type": "description",
            "text": "This event is emitted immediately after the ext_workspace_handle_v1 is\ncreated and each time the workspace state changes, either because of a\ncompositor action or because of a request in this protocol.\n\nMissing states convey the opposite meaning, e.g. an unset active bit\nmeans the workspace is currently inactive.",
            "summary": "the state of the workspace changed"
          },
          "args": [
            {
              "type": "arg",
              "name": "state",
              "argType": "uint",
              "enum": "state"
            }
          ]
        },
        {
          "type": "event",
          "name": "capabilities",
          "description": {
            "type": "description",
            "text": "This event advertises the capabilities supported by the compositor. If\na capability isn't supported, clients should hide or disable the UI\nelements that expose this functionality. For instance, if the\ncompositor doesn't advertise support for removing workspaces, a button\ntriggering the remove request should not be displayed.\n\nThe compositor will ignore requests it doesn't support. For instance,\na compositor which doesn't advertise support for remove will ignore\nremove requests.\n\nCompositors must send this event once after creation of an\next_workspace_handle_v1 . When the capabilities change, compositors\nmust send this event again.",
            "summary": "compositor capabilities"
          },
          "args": [
            {
              "type": "arg",
              "name": "capabilities",
              "argType": "uint",
              "summary": "capabilities",
              "enum": "workspace_capabilities"
            }
          ]
        },
        {
          "type": "event",
          "name": "removed",
          "description": {
            "type": "description",
            "text": "This event is send when the workspace associated with the ext_workspace_handle_v1\nhas been removed. After sending this request, the compositor will immediately consider\nthe object inert. Any requests will be ignored except the destroy request.\n\nIt is guaranteed there won't be any more events referencing this\next_workspace_handle_v1.\n\nThe compositor must only remove a workspaces not currently belonging to any\nworkspace_group.",
            "summary": "this workspace has been removed"
          },
          "args": []
        }
      ],
      "enums": [
        {
          "type": "enum",
          "name": "state",
          "bitfield": true,
          "description": {
            "type": "description",
            "text": "The different states that a workspace can have.",
            "summary": "types of states on the workspace"
          },
          "entries": [
            {
              "type": "entry",
              "name": "active",
              "value": "1",
              "summary": "the workspace is active"
            },
            {
              "type": "entry",
              "name": "urgent",
              "value": "2",
              "summary": "the workspace requests attention"
            },
            {
              "type": "entry",
              "name": "hidden",
              "value": "4",
              "description": {
                "type": "description",
                "text": "The workspace is not visible in its workspace group, and clients\nattempting to visualize the compositor workspace state should not\ndisplay such workspaces.",
                "summary": "the workspace is not visible"
              }
            }
          ]
        },
        {
          "type": "enum",
          "name": "workspace_capabilities",
          "bitfield": true,
          "entries": [
            {
              "type": "entry",
              "name": "activate",
              "value": "1",
              "summary": "activate request is available"
            },
            {
              "type": "entry",
              "name": "deactivate",
              "value": "2",
              "summary": "deactivate request is available"
            },
            {
              "type": "entry",
              "name": "remove",
              "value": "4",
              "summary": "remove request is available"
            },
            {
              "type": "entry",
              "name": "assign",
              "value": "8",
              "summary": "assign request is available"
            }
          ]
        }
      ]
    }
  ]
}
