{"type":"protocol","name":"aura_shell","copyright":{"type":"copyright","text":"Copyright 2017 The Chromium Authors.\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy of this software and associated documentation files (the \"Software\"),\n    to deal in the Software without restriction, including without limitation\n    the rights to use, copy, modify, merge, publish, distribute, sublicense,\n    and/or sell copies of the Software, and to permit persons to whom the\n    Software is furnished to do so, subject to the following conditions:\n    The above copyright notice and this permission notice (including the next\n    paragraph) shall be included in all copies or substantial portions of the\n    Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n    DEALINGS IN THE SOFTWARE."},"interfaces":[{"type":"interface","name":"zaura_shell","version":"19","description":{"type":"description","text":"The global interface exposing aura shell capabilities is used to\n      instantiate an interface extension for a wl_surface object.\n      This extended interface will then allow the client to use aura shell\n      specific functionality.","summary":"aura_shell"},"requests":[{"type":"request","name":"get_aura_surface","description":{"type":"description","text":"Instantiate an interface extension for the given wl_surface to\n\tprovide aura shell functionality. If the given wl_surface is not\n\tassociated with a shell surface, the shell_surface_missing protocol\n\terror is raised.","summary":"extend surface interface for aura shell"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new aura surface interface id","interface":"zaura_surface"},{"type":"arg","name":"surface","argType":"object","summary":"the surface","interface":"wl_surface"}]},{"type":"request","name":"get_aura_output","since":"2","description":{"type":"description","text":"Instantiate an interface extension for the given wl_output to\n\tprovide aura shell functionality.","summary":"extend output interface for aura shell"},"args":[{"type":"arg","name":"id","argType":"new_id","summary":"the new aura output interface id","interface":"zaura_output"},{"type":"arg","name":"output","argType":"object","summary":"the output","interface":"wl_output"}]}],"events":[{"type":"event","name":"layout_mode","since":"11","description":{"type":"description","text":"Sends the layout_mode used by the server.","summary":"sends the layout_mode"},"args":[{"type":"arg","name":"layout_mode","argType":"uint","summary":"layout_mode enum"}]},{"type":"event","name":"bug_fix","since":"14","description":{"type":"description","text":"Sends a monorail ID of a bug fixed on the exo server that clients can\n        use to gate functionality.","summary":"sends a bug fix ID"},"args":[{"type":"arg","name":"id","argType":"uint","summary":"ID of a single bug fix"}]}],"enums":[{"type":"enum","name":"error","bitfield":false,"entries":[{"type":"entry","name":"aura_surface_exists","value":"0","summary":"the surface already has an aura surface object associated"},{"type":"entry","name":"aura_output_exists","value":"1","summary":"the output already has an aura output object associated"}]},{"type":"enum","name":"layout_mode","bitfield":false,"description":{"type":"description","text":"Specifies the server's window layout mode.","summary":"the layout mode"},"entries":[{"type":"entry","name":"windowed","value":"1","summary":"multiple windows"},{"type":"entry","name":"tablet","value":"2","summary":"restricted mode for tablet"}]}]},{"type":"interface","name":"zaura_surface","version":"19","description":{"type":"description","text":"An additional interface to a wl_surface object, which allows the\n      client to access aura shell specific functionality for surface.","summary":"aura shell interface to a wl_surface"},"requests":[{"type":"request","name":"set_frame","description":{"type":"description","text":"Suggests a surface should use a specific frame.","summary":"request a frame for surface"},"args":[{"type":"arg","name":"type","argType":"uint","summary":"the new frame type"}]},{"type":"request","name":"set_parent","since":"2","description":{"type":"description","text":"Set the \"parent\" of this surface. \"x\" and \"y\" arguments specify the\n\tinitial position for surface relative to parent.","summary":"set the parent of this surface"},"args":[{"type":"arg","name":"parent","argType":"object","interface":"zaura_surface","allowNull":"true"},{"type":"arg","name":"x","argType":"int"},{"type":"arg","name":"y","argType":"int"}]},{"type":"request","name":"set_frame_colors","since":"3","description":{"type":"description","text":"Set the frame colors.","summary":"set the frame colors of this surface"},"args":[{"type":"arg","name":"active_color","argType":"uint","summary":"32 bit ARGB color value, not premultiplied"},{"type":"arg","name":"inactive_color","argType":"uint","summary":"32 bit ARGB color value, not premultiplied"}]},{"type":"request","name":"set_startup_id","since":"4","description":{"type":"description","text":"Set the startup ID.","summary":"set the startup ID of this surface"},"args":[{"type":"arg","name":"startup_id","argType":"string","allowNull":"true"}]},{"type":"request","name":"set_application_id","since":"5","description":{"type":"description","text":"Set the application ID.","summary":"set the application ID of this surface"},"args":[{"type":"arg","name":"application_id","argType":"string","allowNull":"true"}]},{"type":"request","name":"set_client_surface_id","since":"7","description":{"type":"description","text":"Deprecated. Please use set_client_surface_str_id instead.\n\tSet the identifier of the surface assigned by the client.","summary":"set the client surface ID of this surface"},"args":[{"type":"arg","name":"client_surface_id","argType":"int"}]},{"type":"request","name":"set_occlusion_tracking","since":"8","description":{"type":"description","text":"Sets occlusion tracking on this surface. The client will be updated with a\n\tnew occlusion fraction when the amount of occlusion of this surface changes.","summary":"set tracked occlusion region"},"args":[]},{"type":"request","name":"unset_occlusion_tracking","since":"8","description":{"type":"description","text":"Unsets occlusion tracking for this surface.","summary":"unset tracked occlusion region"},"args":[]},{"type":"request","name":"activate","since":"9","description":{"type":"description","text":"Make this the active window. This usually implies something like\n\trestacking this surface to the foreground. The compositor is free to\n\tignore this request if it deems the client to be misbehaving. Typically\n\tthis request will only be honoured in response to some user driven\n\tevent, such as executing an application or opening a file in a window\n\tthat already exists.","summary":"Indicate that this window wants to be the active window"},"args":[]},{"type":"request","name":"draw_attention","since":"9","description":{"type":"description","text":"Draw attention to this surface in a way that does not change the user's\n\tfocus. This usually means animating window decorations or taskbar icons.\n\tThe compositor can still ignore this request if it deems fit, but unlike\n\tdraw_focus, these requests are expected to come from background tasks,\n\tand are more likely to be honoured.","summary":"Indicate that this window wants some of the user's attention"},"args":[]},{"type":"request","name":"set_fullscreen_mode","since":"10","description":{"type":"description","text":"Suggests how the windowing system should behave if this surface were\n        to go fullscreen. Does not make the surface fullscreen.\n        Typically the default mode is \"immersive\".","summary":"Sets the behavior of the surface in fullscreen."},"args":[{"type":"arg","name":"mode","argType":"uint","enum":"fullscreen_mode"}]},{"type":"request","name":"set_client_surface_str_id","since":"12","description":{"type":"description","text":"Set the identifier of the surface assigned by the client.","summary":"set the client surface ID of this surface"},"args":[{"type":"arg","name":"client_surface_id","argType":"string"}]},{"type":"request","name":"set_server_start_resize","since":"15","description":{"type":"description","text":"Suggests a surface to have client-side decoration, but\n\tserver-side decides when and where to start the resize. The server may also\n\tapply visual effects to indicate that the resize operation is ongoing.","summary":"request a server-side shadow for surface"},"args":[]},{"type":"request","name":"intent_to_snap","since":"16","description":{"type":"description","text":"Notify (or inform) the server the client's intent to snap the window.\n        To inform it's no longer willing to snap, send 'none'.","summary":"client intents to snap the surface."},"args":[{"type":"arg","name":"direction","argType":"uint","enum":"snap_direction"}]},{"type":"request","name":"set_snap_left","since":"16","description":{"type":"description","text":"Request that surface is snapped to the left.","summary":"snap the surface to the left."},"args":[]},{"type":"request","name":"set_snap_right","since":"16","description":{"type":"description","text":"Request that surface is snapped to the right.","summary":"snap the surface to the right."},"args":[]},{"type":"request","name":"unset_snap","since":"16","description":{"type":"description","text":"Request that surface resets snapping.","summary":"Unset the surface snap."},"args":[]},{"type":"request","name":"set_window_session_id","since":"18","description":{"type":"description","text":"Set window session id to the surface.","summary":"set surface window session id"},"args":[{"type":"arg","name":"id","argType":"int","summary":"window session id"}]},{"type":"request","name":"set_can_go_back","since":"19","description":{"type":"description","text":"Sets that the surface can go back as per its navigation list.\n        This allows the server to react to by minimizing the window upon a\n        system wide back gesture.","summary":"Set the minimize-on-back-gesture behavior."},"args":[]},{"type":"request","name":"unset_can_go_back","since":"19","description":{"type":"description","text":"Unsets that the surface can go back as per its navigation list.\n        See above.","summary":"Unset the minimize-on-back-gesture behavior."},"args":[]}],"events":[{"type":"event","name":"occlusion_changed","since":"8","description":{"type":"description","text":"Notifies when there is a change in the amount this surface is occluded.\n\tThe occlusion update is sent as a fixed point number from 0 to 1, representing\n\tthe proportion of occlusion.","summary":"Notifies on an occlusion change"},"args":[{"type":"arg","name":"occlusion_fraction","argType":"fixed"},{"type":"arg","name":"occlusion_reason","argType":"uint"}]},{"type":"event","name":"lock_frame_normal","since":"17","description":{"type":"description","text":"Notifies the client to lock window in normal or restore state. When\n        window is locked, the window frame should look like it is in restored\n        state, but actually isn't. Locking happends while dragging a maximized\n        window.","summary":"Notify the client that server intent to lock window in normal or restore state"},"args":[]},{"type":"event","name":"unlock_frame_normal","since":"17","description":{"type":"description","text":"Notifies the client to unlock window if it is previously locked.\n        Unlocking happends while dragging a maximized window.","summary":"Notify the client that server intent to unlock window's normal or restore state"},"args":[]}],"enums":[{"type":"enum","name":"frame_type","bitfield":false,"description":{"type":"description","text":"Frame types that can be used to decorate a surface.","summary":"different frame types"},"entries":[{"type":"entry","name":"none","value":"0","summary":"no frame"},{"type":"entry","name":"normal","value":"1","summary":"caption with shadow"},{"type":"entry","name":"shadow","value":"2","summary":"shadow only"}]},{"type":"enum","name":"occlusion_change_reason","bitfield":false,"description":{"type":"description","text":"Enum describing why an occlusion change happened. An occlusion change as a\n\tresult of a user action could include things like the user moving a window,\n\tchanging occlusion, or opening/closing a window, changing the occlusion.","summary":"occlusion change reason"},"entries":[{"type":"entry","name":"user_action","value":"1","summary":"occlusion changed as a result of a user action"}]},{"type":"enum","name":"fullscreen_mode","bitfield":false,"description":{"type":"description","text":"Possible windowing system behaviors if this surface were to go\n          fullscreen.","summary":"Specifies the behavior of the surface in fullscreen."},"entries":[{"type":"entry","name":"immersive","value":"0","summary":"user can access system UIs such as the shelf and window frame\n          by pointing to, or swiping over, the screen edge"},{"type":"entry","name":"plain","value":"1","summary":"user cannot access system UIs using mouse/touches"}]},{"type":"enum","name":"snap_direction","bitfield":false,"description":{"type":"description","text":"Surface snap directions.","summary":"surface snap directions"},"entries":[{"type":"entry","name":"none","value":"0","summary":""},{"type":"entry","name":"left","value":"1","summary":""},{"type":"entry","name":"right","value":"2","summary":""}]}]},{"type":"interface","name":"zaura_output","version":"6","description":{"type":"description","text":"An additional interface to a wl_output object, which allows the\n      client to access aura shell specific functionality for output.","summary":"aura shell interface to a wl_output"},"requests":[],"events":[{"type":"event","name":"scale","since":"2","description":{"type":"description","text":"The scale event describes an available scale for the output.\n\tThe event is sent when binding to the output object and there\n\twill always be one scale, the current scale. The event is sent\n\tagain if an output changes scale, for the scale that is now\n\tcurrent. In other words, the current scale is always the last\n\tscale that was received with the current flag set.","summary":"advertise available scales for the output"},"args":[{"type":"arg","name":"flags","argType":"uint","summary":"bitfield of scale flags","enum":"scale_property"},{"type":"arg","name":"scale","argType":"uint","summary":"output scale","enum":"scale_factor"}]},{"type":"event","name":"connection","since":"5","description":{"type":"description","text":"The connection event describes how the output is connected.\n\tThe event is sent when binding to the output object.","summary":"advertise connection for the output"},"args":[{"type":"arg","name":"connection","argType":"uint","summary":"output connection","enum":"connection_type"}]},{"type":"event","name":"device_scale_factor","since":"5","description":{"type":"description","text":"This event describes the device specific scale factor for the output.\n\tThe device specific scale factor is not expected the change during\n\tthe lifetime of the output. And it is not limited to an integer value\n\tlike the scale factor provided by wl_output interface. The exact\n\tcontents scale used by the compositor can be determined by combining\n\tthis device scale factor with the current output scale.\n\tThe event is sent when binding to the output object.","summary":"advertise device scale factor for the output"},"args":[{"type":"arg","name":"scale","argType":"uint","summary":"output device scale factor","enum":"scale_factor"}]}],"enums":[{"type":"enum","name":"scale_property","bitfield":true,"description":{"type":"description","text":"These flags describe properties of an output scale.\n\tThey are used in the flags bitfield of the scale event.","summary":"scale information"},"entries":[{"type":"entry","name":"current","value":"0x1","summary":"indicates this is the current scale"},{"type":"entry","name":"preferred","value":"0x2","summary":"indicates this is the preferred scale"}]},{"type":"enum","name":"scale_factor","bitfield":false,"entries":[{"type":"entry","name":"0400","value":"400"},{"type":"entry","name":"0500","value":"500"},{"type":"entry","name":"0550","value":"550"},{"type":"entry","name":"0600","value":"600"},{"type":"entry","name":"0625","value":"625"},{"type":"entry","name":"0650","value":"650"},{"type":"entry","name":"0700","value":"700"},{"type":"entry","name":"0750","value":"750"},{"type":"entry","name":"0800","value":"800"},{"type":"entry","name":"0850","value":"850"},{"type":"entry","name":"0900","value":"900"},{"type":"entry","name":"0950","value":"950"},{"type":"entry","name":"1000","value":"1000"},{"type":"entry","name":"1050","value":"1050"},{"type":"entry","name":"1100","value":"1100"},{"type":"entry","name":"1150","value":"1150"},{"type":"entry","name":"1125","value":"1125"},{"type":"entry","name":"1200","value":"1200"},{"type":"entry","name":"1250","value":"1250"},{"type":"entry","name":"1300","value":"1300"},{"type":"entry","name":"1400","value":"1400"},{"type":"entry","name":"1450","value":"1450"},{"type":"entry","name":"1500","value":"1500"},{"type":"entry","name":"1600","value":"1600"},{"type":"entry","name":"1750","value":"1750"},{"type":"entry","name":"1800","value":"1800"},{"type":"entry","name":"2000","value":"2000"},{"type":"entry","name":"2200","value":"2200"},{"type":"entry","name":"2250","value":"2250"},{"type":"entry","name":"2500","value":"2500"},{"type":"entry","name":"2750","value":"2750"},{"type":"entry","name":"3000","value":"3000"},{"type":"entry","name":"3500","value":"3500"},{"type":"entry","name":"4000","value":"4000"},{"type":"entry","name":"4500","value":"4500"},{"type":"entry","name":"5000","value":"5000"}]},{"type":"enum","name":"connection_type","bitfield":false,"entries":[{"type":"entry","name":"unknown","value":"0"},{"type":"entry","name":"internal","value":"1"}]}]}]}